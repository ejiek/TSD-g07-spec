package icrash.operations.enviroment.actCorrupter.oeCorruptAlert {

import lu.uni.lassy.messir.libraries.primitives

import icrash.concepts.primarytypes.datatypes
import icrash.concepts.primarytypes.classes
import icrash.environment

	Operation Model {
		operation: actCorrupter.outactCorrupter.oeCorruptAlert(ActAlert:ctAlert):ptBoolean{
			preP{
  				let TheSystem: ctState in
  				self.rnActor.rnSystem = TheSystem
  			  
				/* PreP01 */
				and TheSystem.vpStarted = true
				/* PreP02 */
				TheSystem.rnctAlert->select(id.eq(AdtAlertID))
				 = ColctAlert
				 and ColctAlert->size().eq(1)
  			}
  			
  			postF{
  				let TheSystem: ctState in
  				let CorruptedAlert: ctAlert in
  				self.rnActor.rnSystem = TheSystem
  				
				  /* PostF02 */
  				  and CorruptedAlert.id=ActAlert.id
  				  and CorruptedAlert.status=ActAlert.status
  				  and CorruptedAlert.location=ActAlert.location
  				  and CorruptedAlert.instant=ActAlert.instant
  				  and CorruptedAlert.comment=ActAlert.comment
  				  and CorruptedAlert.corruption=ActAlert.etCorruptionKind.corrupted
  				  and TheSystem.rnctAlert@post->select(id.eq(ActAlert.id)) = CorruptedAlert
  			}
  
		}
	}


}
package icrash.operations.environment.actCoordinator.oeDeleteVictim {

import lu.uni.lassy.messir.libraries.primitives

import icrash.concepts.primarytypes.datatypes
import icrash.concepts.primarytypes.classes
import icrash.environment

Operation Model {

operation: actCoordinator.outactCoordinator.oeDeleteVictim(AdtVictimID:dtVictimID):ptBoolean
{
preP{
  let TheSystem: ctState in
  let TheActor:actCoordinator in
  let AdtVictimID:dtVictimID in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheCoordinator
  
/* PreP01 */
  and TheSystem.vpStarted = true
/* PreP02 */
  and TheActor.rnctAuthenticated.vpIsLogged = true
/* PreF01 */
  TheSystem.rnctVictim->select(id.eq(AdtVictimID))
  = ColctVictims
  and ColctVictims->size().eq(1)
}

postF{
  let TheSystem: ctState in
  let TheActor:actCoordinator in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheActor
  
/* PostF01 */
  TheSystem.rnctVictim->select(id.eq(AdtVictimID))
  = ColctVictims
  and ColctVictims->size().eq(0)
/* PostF02 */
  and TheActor.rnInterfaceIN^ieVictimDeleted()
}
postP{true}

}
}
}
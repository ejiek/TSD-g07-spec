package icrash.operations.environment.actCoordinator.oeAddVictim {

import lu.uni.lassy.messir.libraries.primitives

import icrash.concepts.primarytypes.datatypes
import icrash.concepts.primarytypes.classes
import icrash.environment

Operation Model {

operation: actCoordinator.outactCoordinator.oeAddVictim(AdtCrisisID:dtCrisisID):ptBoolean
{
preP{
  let TheSystem: ctState in
  let TheActor:actCoordinator in
  let AdtVictimID:dtVictimID in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheCoordinator
  
/* PreP01 */
  and TheSystem.vpStarted = true
/* PreP02 */
  and TheActor.rnctAuthenticated.vpIsLogged = true
   }
postF{
  let TheSystem: ctState in
  let TheActor:actCoordinator in
  let AdtVictimID:dtVictimID in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheActor
  
/* PostF01 */
 TheSystem.nextValueForVictimID=PrenextValueForVictimID
 and PrenextValueForVictimID.add(1) = PostnextValueForVictimID
 and TheSystem@post.nextValueForVictimID = PostnextValueForVictimID

/* PostF02 */
and TheSystem.nextValueForVictimID.todtString().eq(AdtVictimID)

and ActVictim.init(AdtVictimID)
				   
and 
TheSystem.rnCtCrisis@post.includes(ActVictim)

/* PostF03 */
and TheActor.rnInterfaceIN^ieVictimAdded()
}
postP{true}

}
}
}